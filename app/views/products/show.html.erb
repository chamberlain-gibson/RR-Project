<%#
REFERENCES
1. Jensen, C. (2023). Fullstack E-Commerce: Ruby on Rails 7, Hotwire, Tailwind, Stripe, PostgreSQL [YouTube Video]. In YouTube. https://www.youtube.com/watch?v=hURUMwdCWuI&t=1109s (https://github.com/connerj70/ecomm)

2. Sreeram Venkitesh. (2022, October 13). How To Set Up User Authentication with Devise in a Rails 7 Application. Digitalocean.com; DigitalOcean. https://www.digitalocean.com/community/tutorials/how-to-set-up-user-authentication-with-devise-in-a-rails-7-application

3. Learn Hotwire and Turbo with a free Rails 7 tutorial. (2024). Learn Hotwire and Turbo with a Free Rails 7 Tutorial. https://www.hotrails.dev/turbo-rails

4. Tailwind CSS - Rapidly build modern websites without ever leaving your HTML. (2020, November 15). Tailwindcss.com; Tailwind CSS. https://tailwindcss.com/

5. What are payment rails? A guide | Stripe. (2023). Stripe.com. https://stripe.com/REFERENCES/more/what-are-payment-rails

6. PostgreSQL Tutorial. (2021). Postgresqltutorial.com. https://www.postgresqltutorial.com/

7. Beginning | Ruby on Rails Tutorial. (2014). Blackboard.com. https://alt-5fc921f3695d4.blackboard.com/bbcswebdav/courses/CSCI.33440.2022-50/rails_tutorial/beginning.html

8. chart.js. (2023, December 4). Npm. https://www.npmjs.com/package/chart.js?activeTab=readme

9. Stimulus Handbook. (2023). Hotwired.dev. https://stimulus.hotwired.dev/handbook/origin


Show page for the products
%>

<h1>Product show page</h1>
<div class= "flex justify-center gap-20 py-10">
    <div class= "flex flex-wrap max-w-lg">
        <% @product.images.each do |image| %>
        <%= image_tag image, class: "w-auto h-64"%>
        <%end%>
</div>

<%# Styling for the product show %>
<div data-controller="products" data-products-product-value= "<%= @product.to_json %>"
class= "flex flex-col items-start max-w-sm">
    <%# Styling for the user to click different sizes of the product, 
    view if an item is in stock or not in stock, then be able to add 
    that item to the cart %>
    <h1 class="font-bold text-4xl uppercase"><%= @product.name %></h1>
    <p class= "text-2xl mt-4"> $<%= (@product.price/100.0).to_s %></p>
    <p class= "text-md py-8"><%= @product.description %></p>
    <div class="my-8">
        <p class= 'uppercase text-lg'>Size</p>
        <% @product.stocks.each do |stock|%>
        <% if stock.amount > 0 %>
            <%# The Admin can show the user if something is in stock from the Stocks page 
            from that item that will be selectable %>
            <button data-action="click->products#selectSize" value= "<%= stock.size %>" class="bg-gray-200 text-gray-800
            font-semibold py-2 px-4 rounded hover:bg-gray-300
            focus:outlin-none focus:ring-2 foucs:ring-gray-500 focus-opacity-50">
            <%= stock.size %>
            </button>
        <%else%>
            <%# The Admin can show the user if someonething is out stock from the Stocks page 
            it will show up as dark grey %>        
            <button disabled value="<%= stock.size %>" class="disabled:bg-gray-400 text-gray-800
            font-semibold py-2 px-4 rounded hover:bg-gray-300
            focus:outlin-none focus:ring-2 foucs:ring-gray-500 focus-opacity-50">
            <%= stock.size %>
            </button>
        <%end%>
        <%end%>
    </div>
        <%# %>
        <div id="selected-size"></div>
        <button data-action="click->products#addToCart" 
        class= "inline-flex items-centr justify-center px-5 py-3 border 
        border-transparent font-medium rounded-md text-white bg-gray-600
        hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2
        focus:ring-gray-500">Add to Cart</button>
        
        </div>
    </div>